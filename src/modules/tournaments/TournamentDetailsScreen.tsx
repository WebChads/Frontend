import { useParams, useNavigate } from 'react-router-dom';
import arrowIcon from '../../images/arrow.png';
import '../tournaments/css/tournaments.css';
import avatar from '../../images/Avatar.png';
import { Footer } from '../../ui/Footer';
import { useState } from 'react';
import { mockTournaments } from './TournamentsScreen';



// üß™ –ú–æ–∫–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏
const mockParticipants = [
    { id: 1, name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤', age: 24, tournamentId: 1 },
    { id: 2, name: 'IV–∞–Ω –ò–≤–∞–Ω–æ–≤', age: 25, tournamentId: 1 },
    { id: 3, name: '–ò–≤–∞–ù –ò–ê–Ω–æ–≤', age: 26, tournamentId: 2 },
    { id: 4, name: '–ò–≤–∞–Ω –ò–≤a–Ω–æV', age: 27, tournamentId: 2 },
];

export const TournamentDetailsScreen = () => {
    const { id } = useParams();
    const navigate = useNavigate();
    const [applied, setApplied] = useState(false);

    const tournament = mockTournaments.find(t => t.id === Number(id));

    if (!tournament) {
        return <div style={{ padding: '20px' }}>–¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
    }

    const handleApply = () => {
        setApplied(true);
        // –¢—É—Ç –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –±–µ–∫
    };

    // üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ —ç—Ç–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞
    const participants = mockParticipants.filter(p => p.tournamentId === tournament.id);

    return (
        <div className="tournament-details">
            <button onClick={() => navigate(-1)} className="back-button">
                <img src={arrowIcon} alt="–ù–∞–∑–∞–¥" style={{ width: '24px', transform: 'rotate(180deg)' }} />
            </button>

            <h1 className="details-title">{tournament.title}</h1>

            <div className="details-info">
                <div className="date-chip">
                    {new Date(tournament.date).toLocaleDateString('ru-RU')}
                </div>
                <div className="matches-chip">
                    {tournament.matches} –º–∏–∫—Ä–æ–º–∞—Ç—á–µ–π
                </div>
            </div>
            <p className="judge">–°—É–¥—å—è: {tournament.judge}</p>
             <button
                className="apply-button"
                disabled={applied}
                onClick={handleApply}
            >
                {applied ? '–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É' : '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É'}
            </button>

            {/* üëá –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ */}
            <div className="participants-section">
                <h3 className="participants-title">–£—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
                {participants.length > 0 ? (
                    <ul className="participant-list">
                        {participants.map(p => (
                            <li className="participant-card" key={p.id}>
                                <img
                                    src={avatar}
                                    alt="avatar"
                                    className="participant-avatar"
                                />
                                <div className="participant-info">
                                    <div className="participant-name">{p.name}</div>
                                    <div className="participant-age">{p.age} –ª–µ—Ç</div>
                                </div>
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p className='participants-notfound'>–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                )}
            </div>
            <Footer/>
        </div>
    );
};